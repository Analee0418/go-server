// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type ColorUnionTypeEnum int
const (

	 ColorUnionTypeEnumNull ColorUnionTypeEnum = 0

	 ColorUnionTypeEnumString ColorUnionTypeEnum = 1

)

type ColorUnion struct {

	Null *types.NullVal

	String string

	UnionType ColorUnionTypeEnum
}

func writeColorUnion(r *ColorUnion, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case ColorUnionTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case ColorUnionTypeEnumString:
		return vm.WriteString(r.String, w)
        
	}
	return fmt.Errorf("invalid value for *ColorUnion")
}

func NewColorUnion() *ColorUnion {
	return &ColorUnion{}
}

func (_ *ColorUnion) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *ColorUnion) SetInt(v int32) { panic("Unsupported operation") }
func (_ *ColorUnion) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *ColorUnion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *ColorUnion) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *ColorUnion) SetString(v string) { panic("Unsupported operation") }
func (r *ColorUnion) SetLong(v int64) { 
	r.UnionType = (ColorUnionTypeEnum)(v)
}
func (r *ColorUnion) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		
		return (*types.String)(&r.String)
		
	
	}
	panic("Unknown field index")
}
func (_ *ColorUnion) SetDefault(i int) { panic("Unsupported operation") }
func (_ *ColorUnion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *ColorUnion) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *ColorUnion) Finalize()  { }
