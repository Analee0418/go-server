// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type Message_sessionUnionTypeEnum int
const (

	 Message_sessionUnionTypeEnumNull Message_sessionUnionTypeEnum = 0

	 Message_sessionUnionTypeEnumMessageSession Message_sessionUnionTypeEnum = 1

)

type Message_sessionUnion struct {

	Null *types.NullVal

	MessageSession *MessageSession

	UnionType Message_sessionUnionTypeEnum
}

func writeMessage_sessionUnion(r *Message_sessionUnion, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case Message_sessionUnionTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case Message_sessionUnionTypeEnumMessageSession:
		return writeMessageSession(r.MessageSession, w)
        
	}
	return fmt.Errorf("invalid value for *Message_sessionUnion")
}

func NewMessage_sessionUnion() *Message_sessionUnion {
	return &Message_sessionUnion{}
}

func (_ *Message_sessionUnion) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) SetInt(v int32) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) SetString(v string) { panic("Unsupported operation") }
func (r *Message_sessionUnion) SetLong(v int64) { 
	r.UnionType = (Message_sessionUnionTypeEnum)(v)
}
func (r *Message_sessionUnion) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		r.MessageSession = NewMessageSession()
		
		
		return r.MessageSession
		
	
	}
	panic("Unknown field index")
}
func (_ *Message_sessionUnion) SetDefault(i int) { panic("Unsupported operation") }
func (_ *Message_sessionUnion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Message_sessionUnion) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *Message_sessionUnion) Finalize()  { }
