// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type GoodsUnionTypeEnum int
const (

	 GoodsUnionTypeEnumNull GoodsUnionTypeEnum = 0

	 GoodsUnionTypeEnumMessageAuctionGoods GoodsUnionTypeEnum = 1

)

type GoodsUnion struct {

	Null *types.NullVal

	MessageAuctionGoods *MessageAuctionGoods

	UnionType GoodsUnionTypeEnum
}

func writeGoodsUnion(r *GoodsUnion, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case GoodsUnionTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case GoodsUnionTypeEnumMessageAuctionGoods:
		return writeMessageAuctionGoods(r.MessageAuctionGoods, w)
        
	}
	return fmt.Errorf("invalid value for *GoodsUnion")
}

func NewGoodsUnion() *GoodsUnion {
	return &GoodsUnion{}
}

func (_ *GoodsUnion) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *GoodsUnion) SetInt(v int32) { panic("Unsupported operation") }
func (_ *GoodsUnion) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *GoodsUnion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *GoodsUnion) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *GoodsUnion) SetString(v string) { panic("Unsupported operation") }
func (r *GoodsUnion) SetLong(v int64) { 
	r.UnionType = (GoodsUnionTypeEnum)(v)
}
func (r *GoodsUnion) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		r.MessageAuctionGoods = NewMessageAuctionGoods()
		
		
		return r.MessageAuctionGoods
		
	
	}
	panic("Unknown field index")
}
func (_ *GoodsUnion) SetDefault(i int) { panic("Unsupported operation") }
func (_ *GoodsUnion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *GoodsUnion) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *GoodsUnion) Finalize()  { }
