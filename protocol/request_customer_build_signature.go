// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)

  
type RequestCustomerBuildSignature struct {

	
	
		Filename string
	

	
	
		Filebytes []byte
	

}

func NewRequestCustomerBuildSignature() (*RequestCustomerBuildSignature) {
	return &RequestCustomerBuildSignature{}
}

func DeserializeRequestCustomerBuildSignature(r io.Reader) (*RequestCustomerBuildSignature, error) {
	t := NewRequestCustomerBuildSignature()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func DeserializeRequestCustomerBuildSignatureFromSchema(r io.Reader, schema string) (*RequestCustomerBuildSignature, error) {
	t := NewRequestCustomerBuildSignature()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func writeRequestCustomerBuildSignature(r *RequestCustomerBuildSignature, w io.Writer) error {
	var err error
	
	err = vm.WriteString( r.Filename, w)
	if err != nil {
		return err			
	}
	
	err = vm.WriteBytes( r.Filebytes, w)
	if err != nil {
		return err			
	}
	
	return err
}

func (r *RequestCustomerBuildSignature) Serialize(w io.Writer) error {
	return writeRequestCustomerBuildSignature(r, w)
}

func (r *RequestCustomerBuildSignature) Schema() string {
	return "{\"fields\":[{\"name\":\"filename\",\"type\":\"string\"},{\"name\":\"filebytes\",\"type\":\"bytes\"}],\"name\":\"proto.RequestCustomerBuildSignature\",\"type\":\"record\"}"
}

func (r *RequestCustomerBuildSignature) SchemaName() string {
	return "proto.RequestCustomerBuildSignature"
}

func (_ *RequestCustomerBuildSignature) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetInt(v int32) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetLong(v int64) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetString(v string) { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RequestCustomerBuildSignature) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
			return (*types.String)(&r.Filename)
		
	
	case 1:
		
		
			return (*types.Bytes)(&r.Filebytes)
		
	
	}
	panic("Unknown field index")
}

func (r *RequestCustomerBuildSignature) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *RequestCustomerBuildSignature) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *RequestCustomerBuildSignature) Finalize() { }
