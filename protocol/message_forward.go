// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"github.com/actgardner/gogen-avro/vm/types"
	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/compiler"
)

  
type MessageForward struct {

	
	
		Key *KeyUnion
	

	
	
		Sec *SecUnion
	

}

func NewMessageForward() (*MessageForward) {
	return &MessageForward{}
}

func DeserializeMessageForward(r io.Reader) (*MessageForward, error) {
	t := NewMessageForward()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func DeserializeMessageForwardFromSchema(r io.Reader, schema string) (*MessageForward, error) {
	t := NewMessageForward()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return nil, err
	}

	err = vm.Eval(r, deser, t)
	if err != nil {
		return nil, err	
	}
	return t, err
}

func writeMessageForward(r *MessageForward, w io.Writer) error {
	var err error
	
	err = writeKeyUnion( r.Key, w)
	if err != nil {
		return err			
	}
	
	err = writeSecUnion( r.Sec, w)
	if err != nil {
		return err			
	}
	
	return err
}

func (r *MessageForward) Serialize(w io.Writer) error {
	return writeMessageForward(r, w)
}

func (r *MessageForward) Schema() string {
	return "{\"fields\":[{\"name\":\"key\",\"type\":[\"null\",\"string\"]},{\"name\":\"sec\",\"type\":[\"null\",\"string\"]}],\"name\":\"proto.MessageForward\",\"type\":\"record\"}"
}

func (r *MessageForward) SchemaName() string {
	return "proto.MessageForward"
}

func (_ *MessageForward) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *MessageForward) SetInt(v int32) { panic("Unsupported operation") }
func (_ *MessageForward) SetLong(v int64) { panic("Unsupported operation") }
func (_ *MessageForward) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *MessageForward) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *MessageForward) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *MessageForward) SetString(v string) { panic("Unsupported operation") }
func (_ *MessageForward) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *MessageForward) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
			r.Key = NewKeyUnion()
	
		
		
			return r.Key
		
	
	case 1:
		
			r.Sec = NewSecUnion()
	
		
		
			return r.Sec
		
	
	}
	panic("Unknown field index")
}

func (r *MessageForward) SetDefault(i int) {
	switch (i) {
	
        
	
        
	
	}
	panic("Unknown field index")
}

func (_ *MessageForward) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *MessageForward) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *MessageForward) Finalize() { }
