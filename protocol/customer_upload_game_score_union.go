// Code generated by github.com/actgardner/gogen-avro. DO NOT EDIT.
/*
 * SOURCE:
 *     lueey.avsc
 */
package protocol

import (
	"io"
	"fmt"

	"github.com/actgardner/gogen-avro/vm"
	"github.com/actgardner/gogen-avro/vm/types"
)


type Customer_upload_game_scoreUnionTypeEnum int
const (

	 Customer_upload_game_scoreUnionTypeEnumNull Customer_upload_game_scoreUnionTypeEnum = 0

	 Customer_upload_game_scoreUnionTypeEnumRequestCustomerUploadGameScore Customer_upload_game_scoreUnionTypeEnum = 1

)

type Customer_upload_game_scoreUnion struct {

	Null *types.NullVal

	RequestCustomerUploadGameScore *RequestCustomerUploadGameScore

	UnionType Customer_upload_game_scoreUnionTypeEnum
}

func writeCustomer_upload_game_scoreUnion(r *Customer_upload_game_scoreUnion, w io.Writer) error {
	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType{
	
	case Customer_upload_game_scoreUnionTypeEnumNull:
		return vm.WriteNull(r.Null, w)
        
	case Customer_upload_game_scoreUnionTypeEnumRequestCustomerUploadGameScore:
		return writeRequestCustomerUploadGameScore(r.RequestCustomerUploadGameScore, w)
        
	}
	return fmt.Errorf("invalid value for *Customer_upload_game_scoreUnion")
}

func NewCustomer_upload_game_scoreUnion() *Customer_upload_game_scoreUnion {
	return &Customer_upload_game_scoreUnion{}
}

func (_ *Customer_upload_game_scoreUnion) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) SetInt(v int32) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) SetFloat(v float32) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) SetString(v string) { panic("Unsupported operation") }
func (r *Customer_upload_game_scoreUnion) SetLong(v int64) { 
	r.UnionType = (Customer_upload_game_scoreUnionTypeEnum)(v)
}
func (r *Customer_upload_game_scoreUnion) Get(i int) types.Field {
	switch (i) {
	
	case 0:
		
		
		return r.Null
		
	
	case 1:
		
		r.RequestCustomerUploadGameScore = NewRequestCustomerUploadGameScore()
		
		
		return r.RequestCustomerUploadGameScore
		
	
	}
	panic("Unknown field index")
}
func (_ *Customer_upload_game_scoreUnion) SetDefault(i int) { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *Customer_upload_game_scoreUnion) Finalize()  { }
